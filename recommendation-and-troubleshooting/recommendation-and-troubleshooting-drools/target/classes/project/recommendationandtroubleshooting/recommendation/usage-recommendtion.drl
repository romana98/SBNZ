package project;

import project.recommendationandtroubleshooting.model.recommendation.Configuration;
import project.recommendationandtroubleshooting.model.recommendation.InputRecommendation;
import project.recommendationandtroubleshooting.model.recommendation.ConfigurationUsageType;
import project.recommendationandtroubleshooting.model.recommendation.ConfigurationCharacteristicType;
import project.recommendationandtroubleshooting.model.recommendation.Budget;
import project.recommendationandtroubleshooting.model.recommendation.Mobility;
import project.recommendationandtroubleshooting.model.recommendation.Output;
import java.util.List;
/*
rule "Software Development" 
	agenda-group "usage-recommendation"
	salience (8) 
    when
        $i: InputRecommendation(configurationUsageType.getUsage() == "SoftwareDevelopment")
        $o: Output(recommendedConfigurations.isEmpty(), usage == null, characteristics == null, budget == "done", type == "done")
        $configurations: List() from collect(Configuration(considered == true))
        $c1: Configuration(CPU == "Intel Core i3 Processor", RAM == "8GB DDR4 2666 MHz") from $configurations
        $c2: Configuration(CPU == "Intel Core i5 Processor") from $configurations
    then
    	modify($o) { setUsage("done") }
    	modify($c1) { $c1.increaseScore(10) }
    	modify($c2) { $c2.increaseScore(5) }
end

rule "Editing" 
	agenda-group "usage-recommendation"
	salience (8) 
    when
        $i: InputRecommendation(configurationUsageType.getUsage() == "Editing")
        $o: Output(recommendedConfigurations.isEmpty(), usage == null, characteristics == null, budget == "done", type == "done")
        $configurations: List() from collect(Configuration(considered == true))
        $c: Configuration(CPU == "Intel Core i3 Processor") from $configurations
    then
    	modify($o) { setUsage("done") }
    	modify($c) { $c.increaseScore(10) }
end

rule "Bookkeeping" 
	agenda-group "usage-recommendation"
	salience (8) 
    when
        $i: InputRecommendation(configurationUsageType.getUsage() == "Bookkeeping")
        $o: Output(recommendedConfigurations.isEmpty(), usage == null, characteristics == null, budget == "done", type == "done")
        $configurations: List() from collect(Configuration(considered == true))
        $c: Configuration(CPU == "Intel Core i3 Processor") from $configurations
    then
    	modify($o) { setUsage("done") }
    	modify($c) { $c.increaseScore(10) }
end

rule "3DDesign" 
	agenda-group "usage-recommendation"
	salience (8) 
    when
        $i: InputRecommendation(configurationUsageType.getUsage() == "3DDesign")
        $o: Output(recommendedConfigurations.isEmpty(), usage == null, characteristics == null, budget == "done", type == "done")
        $configurations: List() from collect(Configuration(considered == true))
        $c: Configuration(CPU == "Intel Core i3 Processor") from $configurations
    then
    	modify($o) { setUsage("done") }
    	modify($c) { $c.increaseScore(10) }
end

rule "AcademicPurposes" 
	agenda-group "usage-recommendation"
	salience (8) 
    when
        $i: InputRecommendation(configurationUsageType.getUsage() == "AcademicPurposes")
        $o: Output(recommendedConfigurations.isEmpty(), usage == null, characteristics == null, budget == "done", type == "done")
        $configurations: List() from collect(Configuration(considered == true))
        $c: Configuration(CPU == "Intel Core i3 Processor") from $configurations
    then
    	modify($o) { setUsage("done") }
    	modify($c) { $c.increaseScore(10) }
end

rule "Gaming" 
	agenda-group "usage-recommendation"
	salience (8) 
    when
        $i: InputRecommendation(configurationUsageType.getUsage() == "Gaming")
        $o: Output(recommendedConfigurations.isEmpty(), usage == null, characteristics == null, budget == "done", type == "done")
        $configurations: List() from collect(Configuration(considered == true))
        $c: Configuration(CPU == "Intel Core i3 Processor") from $configurations
    then
    	modify($o) { setUsage("done") }
    	modify($c) { $c.increaseScore(10) }
end

rule "PersonalUse" 
	agenda-group "usage-recommendation"
	salience (8) 
    when
        $i: InputRecommendation(configurationUsageType.getUsages() == "PersonalUse")
        $o: Output(recommendedConfigurations.isEmpty(), usage == null, characteristics == null, budget == "done", type == "done")
        $configurations: List() from collect(Configuration(considered == true))
        $c: Configuration(CPU == "Intel Core i3 Processor") from $configurations

    then
    	modify($o) { setUsage("done") }
    	modify($c) { $c.increaseScore(10) }
end*/