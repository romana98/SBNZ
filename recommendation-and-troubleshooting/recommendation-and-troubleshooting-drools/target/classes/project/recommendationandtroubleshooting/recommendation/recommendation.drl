package project;

import project.recommendationandtroubleshooting.model.recommendation.Configuration;
import project.recommendationandtroubleshooting.model.recommendation.InputRequirements;
import project.recommendationandtroubleshooting.model.recommendation.ConfigurationUsageType;
import project.recommendationandtroubleshooting.model.recommendation.ConfigurationCharacteristicType;
import project.recommendationandtroubleshooting.model.recommendation.Budget;
import project.recommendationandtroubleshooting.model.recommendation.Mobility;
import project.recommendationandtroubleshooting.model.recommendation.Recommendations;
import project.recommendationandtroubleshooting.enums.ConfigurationType
import java.util.Set;


rule "Recommendation"
        agenda-group "recommendation"
	    salience (1)
    when
        $r: Recommendations(configurations.isEmpty());
        $configurations: Set() from collect(Configuration(considered == true));
    then
        System.out.println("Rule: Recommendation");
        modify($r) { setConfigurations($configurations) };
end


/*
rule "Recommendation"
	salience (6)
    when
        $o: Output(recommendedConfigurations.isEmpty(), usage == "done", characteristics == "done", budget == "done", type == "done")
        $configurations: List() from collect(Configuration(considered == true))
        $c: Configuration() from $configurations
    then
        modify($o) { setRecommendedConfigurations($configurations) }
end

*/

