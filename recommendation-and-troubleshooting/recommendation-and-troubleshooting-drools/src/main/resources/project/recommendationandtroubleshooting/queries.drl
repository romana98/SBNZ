package project;

import project.recommendationandtroubleshooting.model.recommendation.ConfigurationClass;
import project.recommendationandtroubleshooting.model.recommendation.Configurations;
import project.recommendationandtroubleshooting.model.recommendation.ConfigurationUsageType;
import project.recommendationandtroubleshooting.model.recommendation.ConfigurationCharacteristicType;
import project.recommendationandtroubleshooting.model.recommendation.Budget;
import project.recommendationandtroubleshooting.model.recommendation.Mobility;
import project.recommendationandtroubleshooting.model.recommendation.Favorite;
import project.recommendationandtroubleshooting.model.recommendation.Rating;
import project.recommendationandtroubleshooting.enums.ConfigurationType;
import project.recommendationandtroubleshooting.model.User;

import java.util.List;

/*query getAverageRating(Long configurationId, Double $average)
	$c: ConfigurationClass(id == configurationId, $ratings: ratings);
	$average:= Number() from accumulate (
		Rating($rate: rate) from $ratings,
		average($rate));
end;*/


query "Average rating" (Long configurationId)
	$c: ConfigurationClass(id == configurationId, $ratings: ratings);
	$average:= Number() from accumulate (
		Rating($rate: rate) from $ratings,
		average($rate));
end;

query "Number of users by rate" (Long configurationId, Long grade)
	$c: ConfigurationClass(id == configurationId, $ratings: ratings);
	$result: Number() from accumulate (
		Rating(rate == grade) from $ratings,
		count(1));
end;




