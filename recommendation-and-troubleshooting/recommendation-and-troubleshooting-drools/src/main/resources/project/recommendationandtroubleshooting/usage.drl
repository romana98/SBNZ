package project.recommendationandtroubleshooting.recommendation;
import project.recommendationandtroubleshooting.model.recommendation.InputRequirements;
import project.recommendationandtroubleshooting.model.recommendation.Recommendations;
import project.recommendationandtroubleshooting.model.recommendation.ConfigurationUsageTypeRequirements;
import project.recommendationandtroubleshooting.model.recommendation.ConfigurationClass;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Collections;


rule "Usage"
        agenda-group "recommendation"
	    salience (3)
    when
        $r: Recommendations(configurations.isEmpty())
        $i: InputRequirements($usageType: configurationUsageType);
        $usage: String() from $usageType.getUsage();
        $requirements: ConfigurationUsageTypeRequirements($u: usage, $u.getUsage() == $usage, $zahtjevi: getRequirements(),
        $reqTouchScreen: touchscreen, $reqMicrophone: microphone, $reqCamera: camera, $reqEgronomic: ergonomic);
        
        $configurations: List() from collect(ConfigurationClass(considered == true));
        $c: ConfigurationClass($mapa: getAttributes(), $touch: touchscreen, $micro: microphone, $cam: camera, $ergo: ergonomic
    	)
    	from $configurations;
    	$neZadovoljava: List( size >= 1 ) from accumulate(
    	    Map.Entry( $tupleMapa: this, $keyMapa: key, $valueMapa: value, 
    	    (value not memberOf (Set)$zahtjevi.get(key) && !((Set)$zahtjevi.get(key)).isEmpty())
    	    ||
    	    ($touch == false && !((Set)$reqTouchScreen).isEmpty())
            ||
            ($micro == false && !((Set)$reqMicrophone).isEmpty())
            ||
            ($cam == false && !((Set)$reqCamera).isEmpty())
            ||
            ($ergo == false && !((Set)$reqEgronomic).isEmpty()) ) from $mapa.entrySet(),
    	    
    		collectList( $tupleMapa )
    	)
    then
        System.out.println("Rule: Usage");
        System.out.println($touch);
        System.out.println($neZadovoljava.size());
    	System.out.println($c);
    	System.out.println($mapa);
    	System.out.println($zahtjevi);
    	modify($c) { setConsidered(false) }
end

/*rule "Usage"
        agenda-group "recommendation"
	    salience (3)
    when
        $r: Recommendations(configurations.isEmpty())
        $i: InputRequirements($usageType: configurationUsageType);
        $usage: String() from $usageType.getUsage();
        $requirements: ConfigurationUsageTypeRequirements($u: usage, $u.getUsage() == $usage, $zahtjevi: getRequirements(),
        $reqCPU: CPU, $reqGPU: GPU, $reqRAM: RAM, $reqOS: OS, $reqPSU: PSU, $reqDiscType: discType,
        $reqDiscSize: discSize, $reqMotherboard: motherboard, $reqScreenSize: screenSize,
        $reqScreenResolution: screenResolution, $reqMusicCard: musicCard,
        $reqTouchScreen: touchscreen, $reqMicrophone: microphone, $reqCamera: camera, $reqEgronomic: ergonomic);

        $configurations: List() from collect(ConfigurationClass(considered == true));
        $c: ConfigurationClass($mapa: getAttributes(),
    		(CPU not memberOf $reqCPU && !$reqCPU.isEmpty())
    		||
            (GPU not memberOf $reqGPU && !$reqGPU.isEmpty())
            ||
            (RAM not memberOf $reqRAM && !$reqRAM.isEmpty())
            ||
            (OS not memberOf $reqOS && !$reqOS.isEmpty())
            ||
            (PSU not memberOf $reqPSU && !$reqPSU.isEmpty())
            ||
            (discType not memberOf $reqDiscType && !$reqDiscType.isEmpty())
            ||
            (discSize not memberOf $reqDiscSize && !$reqDiscSize.isEmpty())
            ||
            (motherboard not memberOf $reqMotherboard && !$reqMotherboard.isEmpty())
            ||
            (screenSize not memberOf $reqScreenSize && !$reqScreenSize.isEmpty())
            ||
            (screenResolution not memberOf $reqScreenResolution && !$reqScreenResolution.isEmpty())
            ||
            (musicCard not memberOf $reqMusicCard && !$reqMusicCard.isEmpty())
            ||
            (touchscreen == false && !$reqTouchScreen.isEmpty())
            ||
            (microphone == false && !$reqMicrophone.isEmpty())
            ||
            (camera == false && !$reqCamera.isEmpty())
            ||
            (ergonomic == false && !$reqEgronomic.isEmpty())
    	)
    	from $configurations
    then
        System.out.println("Rule: Usage");
    	System.out.println($c);
    	System.out.println($mapa);
    	System.out.println($zahtjevi);
    	modify($c) { setConsidered(false) }
end
*/